#ðŸ§ª Script Python â€” Fusion Sol + Climat + Engrais
import pandas as pd
import geopandas as gpd
from shapely.geometry import Point
from sklearn.neighbors import BallTree
import numpy as np

# ðŸ“¥ Charger les donnÃ©es de sol (GeoDataFrame dÃ©jÃ  crÃ©Ã©e)
gdf_soil = gpd.read_file("isdasoil_points.geojson")

# ðŸ“¥ Charger les donnÃ©es mÃ©tÃ©o restructurÃ©es
df_meteo = pd.read_csv("weather_afrique_restruc_total.csv")

# ðŸ“¥ Charger les indicateurs FAOSTAT
df_inputs = pd.read_csv("indicateurs_agronomiques_FAOSTAT.csv")

# ðŸ§­ Ã‰tape 1 â€” Associer mÃ©tÃ©o par proximitÃ© gÃ©ographique

# Convertir points sol en radians
soil_coords = np.deg2rad(gdf_soil[['latitude', 'longitude']].values)
tree = BallTree(soil_coords, metric='haversine')

# Associer chaque point mÃ©tÃ©o au point de sol le plus proche
weather_coords = np.deg2rad(df_meteo[['latitude', 'longitude']].values)
dist, idx = tree.query(weather_coords, k=1)

# CrÃ©er fusion mÃ©tÃ©o+sol
df_meteo['soil_index'] = idx.flatten()
df_meteo['distance_km'] = dist.flatten() * 6371  # rayon terrestre

# Filtrer les paires trop Ã©loignÃ©es (> 50 km)
df_meteo_filtered = df_meteo[df_meteo['distance_km'] <= 50]

# ðŸ§  Ã‰tape 2 â€” Fusion sol + mÃ©tÃ©o
gdf_soil = gdf_soil.reset_index()
df_meteo_joined = df_meteo_filtered.merge(gdf_soil, left_on='soil_index', right_on='index')

# ðŸ“Š Ã‰tape 3 â€” Ajouter FAOSTAT (par pays et annÃ©e)
df_meteo_joined['year'] = pd.DatetimeIndex(df_meteo_joined['date']).year
df_final = df_meteo_joined.merge(df_inputs, on=['country', 'year'], how='left')

# ðŸ’¾ Exporter le jeu dâ€™apprentissage final
df_final.to_csv("dataset_agronomique_final.csv", index=False)
print("âœ… Fusion complÃ¨te terminÃ©e : dataset_agronomique_final.csv")
